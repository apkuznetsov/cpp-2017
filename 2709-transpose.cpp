/*
Напишите функцию, которая принимает на вход целочисленную матрицу M (другими словами, просто двумерный целочисленный массив) rows × cols, и возвращает транспонированную матрицу M^T (тоже двумерный целочисленный массив) размера cols × rows.

Если в M на пересечении i-ой строки и j-ого столбца стояло число x, то на пересечении  j-ой строки и i-ого столбца в матрице M^T тоже будет стоять число x,
или другими словами M^T[j][i] = M[i][j].

Обратите внимание, что вам неизвестно, каким именно способом выделялась память для массива M. Выделять память под массив M^T можете любым удобным вам способом. Изменять исходную матрицу нельзя.
*/

int** transpose(const int* const* m, unsigned rows, unsigned cols) {
    int** transposed = new int*[cols];

    for (unsigned i = 0; i < cols; i++) {
        *(transposed + i) = new int[rows];
        
        for (unsigned j = 0; j < rows; j++) {
            transposed[i][j] = m[j][i];
        }
    }

    return transposed;
}
