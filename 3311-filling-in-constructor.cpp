/*
Конструкторов у структуры может быть несколько. Для строки может оказаться полезным заполняющий конструктор (например, чтобы создать строку пробелов). 
Заполняющий конструктор принимает число и символ, и создаёт строку с заданным количеством повторений переданного символа. Условия налагаемые на реализацию конструктора те же самые (в поле size размер без учета завершающего 0 символа, в поле str C-style строка, т.е. с завершающим 0 символом).

Кроме конструктора в этой задаче вам нужно также реализовать и деструктор, который освободит выделенную память.

Требования к решению в этом задании не нужно вводить или выводить что-либо, не нужно реализовывать функцию main. Для работы с памятью не используйте функции из cstdlib (malloc, calloc, realloc и free).
*/

#include <cstddef>
#include <cstring>

struct String {
    
    String(size_t repeat_times, char symbol)
        : size(repeat_times)
        , str(new char[repeat_times + 1]) {
            
       for(int i = 0; i < repeat_times; str[i++] = symbol);
       str[repeat_times] = '\0'; 
    }
       
    ~String() {
       delete []str;
    }
       
    size_t size;
    char *str;
};
